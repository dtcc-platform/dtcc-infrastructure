name: CI-wheels

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BRANCH: develop

jobs:
  build:
    strategy:
      matrix: 
        os: [ubuntu-latest]#, windows-latest, macos-latest]
        repo: [model]
        python-version: ["3.10"]
    runs-on: ${{ matrix.os }}
    # Placeholder for Docker on our Amazon AWS Runner
    #container:
    #  image: ubuntu-latest
    #  options: --user 1000


    steps:
    # VN at 16 March 2023: checkout/v3 causes some weird issues, so went for manual cloning instead...
    #- uses: actions/checkout@v3
    #- uses: actions/checkout@v2
    - uses: actions/setup-python@v2
    - name: clone repo
      run: git clone https://github.com/dtcc-platform/dtcc-${{ matrix.repo }} -b $BRANCH && pwd
    - name: pip install MacOS/Ubuntu
      run: ls -alt && export PATH="$pythonLocation:$PATH" && python --version && export "DEB_PYTHON_INSTALL_LAYOUT=deb_system" && cd dtcc-${{ matrix.repo }}/ && pip install .
      if: matrix.os != 'windows-latest'
    - name: build wheel
      run: cd dtcc-${{ matrix.repo }}/ && python -m pip install --upgrade build && python -m pip install --upgrade twine && python -m build && python -m twine upload --repository testpypi dist/*
    #- name: build wheel MacOS/Ubuntu
    #  run:  ls -alt && export PATH="$pythonLocation:$PATH" && python --version && export "DEB_PYTHON_INSTALL_LAYOUT=deb_system" && pip install . && pip install build && python -m build
    #  if: matrix.os != 'windows-latest'
    #- name: pip install Windows
    #  run: pip install .  
    #  if: matrix.os == 'windows-latest'
      # ${{ github.event.repository.name }}/
    #  shell: bash {0}
    #- name: cmake install
    #  run: cd ${{ github.event.repository.name }}/build/ && cmake .. && make all && sudo make install && cd ..
    ###- name: run tests
    ###  run: pwd && ls -alt && cd tests/ && pwd && ls -alt && sh run-tests
    ###  if: matrix.os != 'windows-latest'
    #- name: cleanup op
    #  if: always()
    #  run : sudo find /Runner/Runner/_work/${{ github.event.repository.name }}/. -name . -o -prune -exec rm -rf -- {} + || true
    # This fails after checkout/v3 was not used
    #- name: more cleanup ops
    #  run : pwd && sudo rm -rf /home/ubuntu/Runner/actions-runner/_work/${{ github.event.repository.name }}
